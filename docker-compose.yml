version: '3.8'
services:
  an-mysql:
    build:
      context: './mysql'
      args:
        - 'UID=${UID}'
        - 'GID=${GID}'
    container_name: 'an-mysql'
    env_file:
      - '.env'
    secrets:
      - mysqlroot
    environment:
      - MYSQL_DATABASE=antodo17072023
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysqlroot
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '5'
  an-mongo:
    build:
      context: './mongo'
      args:
        - 'UID=${UID}'
        - 'GID=${GID}'
    container_name: 'an-mongo'
    env_file:
      - '.env'
    secrets:
      - mongoroot
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/mongoroot
    volumes:
      - mongodb:/data/db
    restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '5'
  an-redis:
    build:
      context: './redis'
      args:
        - 'UID=${UID}'
        - 'GID=${GID}'
    container_name: 'an-redis'
    env_file:
      - '.env'
    secrets:
      - redisuser
    environment: 
      - REDIS_PASS_FILE=/run/secrets/redisuser
    volumes:
      - redisdb:/data
    command: ["sh", "-c", "exec redis-server /etc/redis/redis.conf --requirepass \"$$(cat $$REDIS_PASS_FILE)\""]
    restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '5'
  #an-api:
  #  build: ./api
  #  container_name: 'an-api'
  #  volumes:
  #    - ./api:/api
  #    - /api/node_modules
  #  restart: always
  #  logging:
  #    driver: 'json-file'
  #    options:
  #      max-size: '100k'
  #      max-file: '5'
  an-oauth:
    build:
      context: './oauth'
      args:
        - 'UID=${UID}'
        - 'GID=${GID}'
    container_name: 'an-oauth'
    env_file:
      - '.env'
    volumes: 
      - ./oauth:/oauth
      - /oauth/node_modules
  #  restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '5'
  #an-cdn:
  #  build: ./cdn
  #  container_name: 'an-cdn'
  #  volumes: 
  #    - ./cdn:/cdn
  #    - /cdn/node_modules
  #  restart: always
  #  logging:
  #    driver: 'json-file'
  #    options:
  #      max-size: '100k'
  #      max-file: '5'
  an-public:
    build: 
      context: './public'
      args:
        - 'UID=${UID}'
        - 'GID=${GID}'
    container_name: 'an-public'
    env_file:
      - '.env'
    ports:
      - 4200:4200
    volumes: 
      - ./public:/angular
      - distribucion:/angular/dist/angular
      - /angular/node_modules
  #  restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '5'
  an-todo:
    build: 
      context: './todo'
      args:
        - 'UID=${UID}'
        - 'GID=${GID}'
    container_name: 'an-todo'
    env_file:
      - '.env'
    volumes:
      - distribucion:/usr/share/nginx/html
    ports:
      - 80:80
      - 443:443
      - 3000:3000
      - 3306:3306
      - 27017:27017
      - 6379:6379
      - 5000:5000
      #- 2000:2000
    #restart: always
    logging:
      driver: 'json-file'
      options:
        max-size: '100k'
        max-file: '5'
volumes:
  distribucion:
  mysql:
  mongodb:
  redisdb:
  # mysql:
#    driver: local
#    driver_opts:
#      type: none
#      device: "./mysql/db-mysql"
#      o: bind
secrets:
  mysqlroot:
    file: mysqlroot.txt
  mongoroot:
    file: mongoroot.txt
  redisuser:
    file: redisuser.txt
