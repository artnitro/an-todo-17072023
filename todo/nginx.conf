user                                www;
worker_processes                    auto;
error_log                           /var/log/nginx/error.log warn;

pid                                 /var/log/nginx/nginx.pid;

events {
  worker_connections                1024;
}

stream {
  upstream mysqlapp {
    server                          an-mysql:3306;
  }
  upstream mongoapp {
    server                          an-mongo:27017;
  }
 upstream redisapp {
   server                          an-redis:6379;
 }

  server {
    listen                          3306;
    proxy_pass                      mysqlapp;
  }
  server {
    listen                          27017;
    proxy_pass                      mongoapp;
  }
  server {
    listen                          6379;
    proxy_pass                      redisapp;
  }
}

http {
  default_type                      application/octet-stream;
  include                           /etc/nginx/mime.types; 
  server_tokens                     off;
  log_format  main                  '$remote_addr - $remote_user [$time_local] "$request" '
                                    '$status $body_bytes_sent "$http_referer" '
                                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log                        /var/log/nginx/access.log  main;

  #ssl_ciphers                       EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
  ssl_ciphers                       HIGH:!aNULL:!MD5;
  ssl_protocols                     TLSv1.2 TLSv1.3;
  ssl_session_cache                 shared:SSL:10m;
  ssl_session_timeout               10m;
  ssl_prefer_server_ciphers         on;

  #upstream apiapp {
  #  server an-api:3000;
  #}
  upstream oauthapp {
    server an-oauth:5000;
  }
  #upstream cdnapp {
  #  server an-cdn:2000;
  #}

  map $host $host_name {
    default                         https://antodo.local$request_uri;
    antodo.local                    https://antodo.local$request_uri;
    api.antodo.local                https://api.antodo.local:3000$request_uri;
    oauth.antodo.local              https://oauth.antodo.local:5000$request_uri;
  }

  server {
    listen                          80;
    listen                          [::]:80;

    #$host_name; dejad comentado. 27/06/2022.
    
    #if ($host = 'antodo.local') {
    #  return 301 https://antodo.local$request_uri;
    #}

    #if ($host = 'api.antodo.local') {
    #  return 301 https://api.antodo.local$request_uri;
    #}

    #if ($host = 'oauth.antodo.local') {
    #  return 301 https://oauth.antodo.local$request_uri;
    #}

    if ($host_name != '') { 
      rewrite ^(.*)$ $host_name permanent;
    }
  }

  server {
    listen                          443 ssl;
    listen                          [::]:443 ssl;
    http2                           on;

    #if ($host = 'https://api.antodo.local') {
    #  return 301 https://api.antodo.local:3000$request_uri;
    #}

    #if ($host = 'https://oauth.antodo.local') {
    #  return 301 https://oauth.antodo.local:5000$request_uri;
    #}

    server_name                     antodo.local;

    ssl_certificate                   /etc/nginx/antodo.local.crt;
    ssl_certificate_key               /etc/nginx/antodo.local.key; 

    root                            /usr/share/nginx/html;
    index                           index.html index.htm;
    sendfile                        on;
    
    error_page                      500 502 503 504  /50x.html;
    proxy_intercept_errors          on;
    default_type                    application/json;

    gzip_static                     on;
    gzip                            off;
    #gzip_comp_level                 3;
    #gzip_types                      text/plain text/css application/javascript image/*;

    add_header                      X-Content-Type-Options nosniff;
    add_header                      X-Frame-Options SAMEORIGIN;
    add_header                      X-XSS-Protection "1; mode=block";
        
    location / {
      rewrite ^/(/.*) $1 break;
      # Lanza el error 404 cuando no encuentra un fichero.
      try_files $uri $uri/ =404;
    }

    location = /50x.html {
      root                          /usr/share/nginx/html;
    }
  }

  server {
    listen                          3000 ssl;
    listen                          [::]:3000 ssl;
    http2                           on;
    server_name                     api.antodo.local;

    ssl_certificate                   /etc/nginx/antodo.local.crt;
    ssl_certificate_key               /etc/nginx/antodo.local.key;

    #resolver                        127.0.0.11;
    sendfile                        off;
    proxy_buffering                 off;

    location /api/v1/user/ {
      resolver                      127.0.0.11 valid=5s;
      set $api                      http://apiapp/api/v1/user/;
      proxy_pass                    $api;
      include                       /etc/nginx/proxy.conf;
    }

    location /api/v1/ {
      resolver                      127.0.0.11 valid=5s;
      set $api                      http://apiapp/api/v1/$is_args$args;
      proxy_pass                    $api;
      include                       /etc/nginx/proxy.conf;
    }
  }

  server {
    listen                          5000 ssl;
    listen                          [::]:5000 ssl;
    http2                           on;
    server_name                     oauth.antodo.local;

    ssl_certificate                   /etc/nginx/antodo.local.crt;
    ssl_certificate_key               /etc/nginx/antodo.local.key;

    #resolver                        127.0.0.11;
    sendfile                        off;
    proxy_buffering                 off;

    location =/oauth/v1/ {
      resolver                      127.0.0.11 valid=5s;
      set $oauth                    http://oauthapp/oauth/v1/$is_args$args;
      proxy_pass                    $oauth;
      
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade $http_upgrade; # ## ### Setup sockets.
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
    }
    # Desactivado para desarrollo: 30/07/2023.
    #return                          404;
  }

  server {
    listen                          2000;
    listen                          [::]:2000;
    server_name                     cdn.antodo.local;
    
    #resolver                        127.0.0.11;
    sendfile                        on;
    proxy_buffering                 off;
        
    location /static/v1/ {
      resolver                      127.0.0.11 valid=5s;
      set $cdn                      http://cdnapp/static/v1/$is_args$args;
      proxy_pass                    $cdn;
      include                       /etc/nginx/proxy.conf;
    }
  }
}
